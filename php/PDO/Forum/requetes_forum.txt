// Préparer les informations pour la création / la connexion d'un utilisateur
SELECT * FROM user

// Créer un nouvel utilisateur
INSERT INTO user (username, user_email, user_password) VALUES (:name, :email, :password)

// Supprimer un utilisateur (mon profil ou admin)
DELETE FROM user WHERE id_user = :id"

// Afficher les infos d'un utilisateur
SELECT * FROM user
WHERE id_user = :id

// Liste des utilisateurs, avec rôle respectifs
SELECT username, role
FROM user

// Afficher la liste des utilisateurs avec nombre de sujets + ids
SELECT username, COUNT(id_sujet) AS nbSujets, GROUP_CONCAT(id_sujet) AS ids_sujets
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
GROUP BY s.id_user

// Afficher la liste des utilisateurs avec nombre de messages + ids
SELECT username, COUNT(id_message) AS nbMessages, GROUP_CONCAT(id_message) AS ids_messages
FROM message m
INNER JOIN user u ON m.id_user = u.id_user
GROUP BY m.id_user

// Compter les réponses pour un sujet
SELECT titre_sujet, COUNT(id_message) -1 AS reponses
FROM sujet s
INNER JOIN message m ON s.id_sujet = m.id_sujet
GROUP BY titre_sujet

// Afficher les sujets d'un utilisateur (ids_sujets)
SELECT id_sujet, titre_sujet
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
WHERE s.id_user = :id

// Afficher les messages d'un utilisateur (ids_messages)
SELECT id_message, texte
FROM message m
INNER JOIN user u ON m.id_user = u.id_user
WHERE m.id_user = :id

// Créer un nouveau sujet
INSERT INTO sujet (titre_sujet, id_user) VALUES (:titre, :auteur)

// Créer un nouveau message
INSERT INTO message (texte, id_sujet, id_user) VALUES (:texte, :sujet, :auteur)

// Éditer un sujet (titre_sujet)
UPDATE sujet SET titre_sujet = :titre WHERE id_sujet = :sujet

// Éditer un message (texte)
UPDATE message SET texte = :texte WHERE id_message = :message

// Supprimer un sujet
DELETE FROM sujet WHERE id_sujet = :sujet

// Supprimer un message
DELETE FROM message WHERE id_message = :message

// Afficher tous les sujets, le nombre de réponses, les messages, le premier message
SELECT s.id_sujet, COUNT(texte) -1 AS nbReponses, GROUP_CONCAT(id_message) AS ids_messages, MIN(id_message) AS description
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
GROUP BY s.id_sujet

// Afficher tous les sujets (auteur, date, est_resolu, est_verrouille, description, nbReponses)
SELECT s.id_sujet, username AS auteur, s.date_creation, est_resolu, est_verrouille, MIN(id_message) AS description, COUNT(texte) -1 AS nbReponses
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
GROUP BY s.id_sujet

// Afficher un sujet (auteur, date, est_resolu, est_verrouille, description, nbReponses) => View Liste des sujets
SELECT s.id_sujet, username AS auteur, s.date_creation, est_resolu, est_verrouille, MIN(id_message) AS description, COUNT(texte) -1 AS nbReponses
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
WHERE s.id_sujet = 1
GROUP BY s.id_sujet

// Afficher un sujet => View Page sujet
SELECT s.id_sujet, username AS auteur, s.date_creation, est_resolu, est_verrouille, COUNT(texte) -1 AS nbReponses, GROUP_CONCAT(id_message) AS ids_messages
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
WHERE s.id_sujet = :sujet
GROUP BY s.id_sujet

// Afficher tous les messages d'un sujet => View Page sujet
SELECT id_message, texte, username, m.date_creation
FROM message m
INNER JOIN sujet s ON m.id_sujet = s.id_sujet
INNER JOIN user u ON m.id_user = u.id_user
WHERE s.id_sujet = :sujet
// Préparer les informations pour la création / la connexion d'un utilisateur
SELECT * FROM user

// Créer un nouvel utilisateur
INSERT INTO user (username, email, password) VALUES (:name, :email, :password)

// Supprimer un utilisateur (mon profil ou admin)
DELETE FROM user WHERE id = :id"

// Afficher les infos d'un utilisateur
SELECT * FROM user
WHERE id = :id

// Liste des utilisateurs, avec rôle respectifs
SELECT username, role
FROM user

// Afficher la liste des utilisateurs avec nombre de sujets + ids
SELECT username, COUNT(t.id) AS nbSujets, GROUP_CONCAT(t.id) AS ids_sujets
FROM topic t
INNER JOIN user u ON t.user_id = u.id
GROUP BY t.user_id

// Afficher la liste des utilisateurs avec nombre de messages + ids
SELECT username, COUNT(p.id) AS nbMessages, GROUP_CONCAT(p.id) AS ids_messages
FROM post p
INNER JOIN user u ON p.user_id = u.id
GROUP BY p.user_id

// Compter les réponses pour un sujet
SELECT titre, COUNT(p.id) -1 AS reponses
FROM topic t
INNER JOIN post p ON t.id = p.topic_id
GROUP BY titre

// Afficher les sujets d'un utilisateur (ids_sujets)
SELECT t.id, titre
FROM topic t
INNER JOIN user u ON t.user_id = u.id
WHERE t.user_id = :id

////////////////////////////////////////////////////////
// Afficher les messages d'un utilisateur (ids_messages)
SELECT id_message, texte
FROM message m
INNER JOIN user u ON m.id_user = u.id_user
WHERE m.id_user = :id

// Créer un nouveau sujet
INSERT INTO sujet (titre, id_user) VALUES (:titre, :auteur)

// Créer un nouveau message
INSERT INTO message (texte, id_sujet, id_user) VALUES (:texte, :sujet, :auteur)

// Éditer un sujet (titre)
UPDATE sujet SET titre = :titre WHERE id_sujet = :sujet

// Éditer un message (texte)
UPDATE message SET texte = :texte WHERE id_message = :message

// Supprimer un sujet
DELETE FROM sujet WHERE id_sujet = :sujet

// Supprimer un message
DELETE FROM message WHERE id_message = :message

// Afficher tous les sujets, le nombre de réponses, les messages, le premier message
SELECT s.id_sujet, COUNT(texte) -1 AS nbReponses, GROUP_CONCAT(id_message) AS ids_messages, MIN(id_message) AS description
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
GROUP BY s.id_sujet

// Afficher tous les sujets (auteur, date, est_resolu, est_verrouille, description, nbReponses)
SELECT s.id_sujet, username AS auteur, s.datecreation, resolu, verrouille, MIN(id_message) AS description, COUNT(texte) -1 AS nbReponses
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
GROUP BY s.id_sujet

// Afficher un sujet (auteur, date, est_resolu, est_verrouille, description, nbReponses) => View Liste des sujets
SELECT s.id_sujet, username AS auteur, s.datecreation, resolu, verrouille, MIN(id_message) AS description, COUNT(texte) -1 AS nbReponses
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
WHERE s.id_sujet = :id
GROUP BY s.id_sujet

// Afficher un sujet => View Page sujet
SELECT s.id_sujet, username AS auteur, s.datecreation, resolu, verrouille, COUNT(texte) -1 AS nbReponses, GROUP_CONCAT(id_message) AS ids_messages
FROM sujet s
INNER JOIN user u ON s.id_user = u.id_user
INNER JOIN message m ON s.id_sujet = m.id_sujet
WHERE s.id_sujet = :sujet
GROUP BY s.id_sujet

// Afficher tous les messages d'un sujet => View Page sujet
SELECT id_message, texte, username, m.datecreation
FROM message m
INNER JOIN sujet s ON m.id_sujet = s.id_sujet
INNER JOIN user u ON m.id_user = u.id_user
WHERE s.id_sujet = :sujet